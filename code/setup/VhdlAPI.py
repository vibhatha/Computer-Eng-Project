import numpy as np
import ImageCVAPI as imcv
import ImageAPI as imapi
import FilterAPI as filapi
from numpy import genfromtxt
import scipy


class VhdlAPI:
    source_bin_file = 'image_0_200x200_pad.min'
    source_bin_path='binaries/'

    def __init__(self, source_bin_path = source_bin_path, source_bin_file = source_bin_file):
        self.source_bin_path = source_bin_path
        self.source_bin_file = source_bin_file

    def bin2vhdl(self,output_path=''):
        fnames = str.split(self.source_bin_file,".")
        print(fnames)
        source_file = self.source_bin_path + self.source_bin_file
        output_file = output_path + fnames[0]+".vhdlbin"
        print('Converting to VHDL Binary Format')
        array = genfromtxt(source_file, delimiter=',')
        #array[array > 127] = 1
        #array[array < 127] = 0
        array = self.clip_array(array)
        np.savetxt(output_file, array, delimiter=",", fmt='%d')

    def padbin2jpg(self,bin_file, output_path=''):
        image_array = genfromtxt(bin_file, delimiter=',')
        fnames = str.split(bin_file, ".")
        file_name = str.split(fnames[0],"/")[4]
        print(fnames)
        output_file = output_path + file_name + "_crop.jpg"
        scipy.misc.imsave(output_file, image_array)

    def remove_single_padding(self, arr):
        row_size = len(arr[0])
        print(row_size)
        a1 = np.delete(arr, 0, axis=1)
        a2 = np.delete(a1, 0, axis=0)
        a3 = np.delete(a2, row_size - 2, axis=0)
        a4 = np.delete(a3, row_size - 2, axis=1)
        return a4

    def vhdlbin2bin(self, source_file):
        # converts the vhdl format bin file to normal bin file generated by opencv
        # data range in vhdl bin is 0 or 1, and opencv is 0 or 255
        image_array = genfromtxt(source_file, delimiter=',')
        unpad_image_array = self.remove_single_padding(image_array)
        unpad_image_array[unpad_image_array == 1.0] = 255.0
        return unpad_image_array

    def vhdlbinimg2binimg(self, source_file, output_file):
        # converts a vhdlbinaries file to a opencv binarized image
        new_array = self.vhdlbin2bin(source_file)
        scipy.misc.imsave(output_file, new_array)

    def clip_array(self, array):
        rows = len(array)
        cols = len(array[0])
        for i in range(0, rows):
            for j in range(0, cols):
                val = array[i][j]
                if (val > 128):
                    array[i][j] = 1
                else:
                    array[i][j] = 0
        return array

    def trimvhdlslds(self,source_file):
        array = genfromtxt(source_file, delimiter=',')
        dest_file = str.split(source_file,".")[0]+"_trim.sdl"
        array1 = self.clip_array(array)
        array1 = array1.astype(int)
        # print(array1[21][5])
        np.savetxt(dest_file, array1, delimiter='', fmt='%d')


